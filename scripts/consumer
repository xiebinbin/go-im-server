#image source
FROM golang:1.16-alpine as builder

# install /bin/bash Easy to debug
RUN set -ex \
        && apk add --no-progress --no-cache bash bash-doc bash-completion librdkafka-dev pkgconf gcc musl-dev \
        && rm -rf /var/cache/apk/* \
        && /bin/bash

ENV GO111MODULE=on
#ENV GOPROXY=https://goproxy.io

#set work dir (docker's dir)
WORKDIR /build
COPY . .
WORKDIR /build/im-server

RUN GOOS=linux GOARCH=amd64 go build -a -tags musl -o im-server-consumer ./cmd/consumer/main.go

FROM alpine:latest

WORKDIR /app
# set dir
#把app文件从“builder”中拷贝到本级的当前目录
COPY --from=builder /build/im-server/im-server-consumer /app/
COPY --from=builder /build/config /app/config
COPY --from=builder /build/im-server/configs /app/configs
#把app文件从“builder”中拷贝到本级的当前目录
# 项目默认启动命令
CMD ["/app/im-server-consumer"]