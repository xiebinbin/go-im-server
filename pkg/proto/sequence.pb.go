// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.3
// source: sequence.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SequenceRequest_Type int32

const (
	SequenceRequest_TYPE_MESSAGE SequenceRequest_Type = 0
	SequenceRequest_TYPE_MOMENTS SequenceRequest_Type = 1
)

// Enum value maps for SequenceRequest_Type.
var (
	SequenceRequest_Type_name = map[int32]string{
		0: "TYPE_MESSAGE",
		1: "TYPE_MOMENTS",
	}
	SequenceRequest_Type_value = map[string]int32{
		"TYPE_MESSAGE": 0,
		"TYPE_MOMENTS": 1,
	}
)

func (x SequenceRequest_Type) Enum() *SequenceRequest_Type {
	p := new(SequenceRequest_Type)
	*p = x
	return p
}

func (x SequenceRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SequenceRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_sequence_proto_enumTypes[0].Descriptor()
}

func (SequenceRequest_Type) Type() protoreflect.EnumType {
	return &file_sequence_proto_enumTypes[0]
}

func (x SequenceRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SequenceRequest_Type.Descriptor instead.
func (SequenceRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_sequence_proto_rawDescGZIP(), []int{0, 0}
}

type SequenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string               `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Type SequenceRequest_Type `protobuf:"varint,2,opt,name=type,proto3,enum=sequence.SequenceRequest_Type" json:"type,omitempty"`
}

func (x *SequenceRequest) Reset() {
	*x = SequenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequence_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SequenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceRequest) ProtoMessage() {}

func (x *SequenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sequence_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequenceRequest.ProtoReflect.Descriptor instead.
func (*SequenceRequest) Descriptor() ([]byte, []int) {
	return file_sequence_proto_rawDescGZIP(), []int{0}
}

func (x *SequenceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SequenceRequest) GetType() SequenceRequest_Type {
	if x != nil {
		return x.Type
	}
	return SequenceRequest_TYPE_MESSAGE
}

type SequenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence int64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *SequenceResponse) Reset() {
	*x = SequenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sequence_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SequenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceResponse) ProtoMessage() {}

func (x *SequenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sequence_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequenceResponse.ProtoReflect.Descriptor instead.
func (*SequenceResponse) Descriptor() ([]byte, []int) {
	return file_sequence_proto_rawDescGZIP(), []int{1}
}

func (x *SequenceResponse) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

var File_sequence_proto protoreflect.FileDescriptor

var file_sequence_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x2a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x01,
	0x22, 0x2e, 0x0a, 0x10, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x32, 0x52, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sequence_proto_rawDescOnce sync.Once
	file_sequence_proto_rawDescData = file_sequence_proto_rawDesc
)

func file_sequence_proto_rawDescGZIP() []byte {
	file_sequence_proto_rawDescOnce.Do(func() {
		file_sequence_proto_rawDescData = protoimpl.X.CompressGZIP(file_sequence_proto_rawDescData)
	})
	return file_sequence_proto_rawDescData
}

var file_sequence_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sequence_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sequence_proto_goTypes = []interface{}{
	(SequenceRequest_Type)(0), // 0: sequence.SequenceRequest.Type
	(*SequenceRequest)(nil),   // 1: sequence.SequenceRequest
	(*SequenceResponse)(nil),  // 2: sequence.SequenceResponse
}
var file_sequence_proto_depIdxs = []int32{
	0, // 0: sequence.SequenceRequest.type:type_name -> sequence.SequenceRequest.Type
	1, // 1: sequence.Sequence.GetSequence:input_type -> sequence.SequenceRequest
	2, // 2: sequence.Sequence.GetSequence:output_type -> sequence.SequenceResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sequence_proto_init() }
func file_sequence_proto_init() {
	if File_sequence_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sequence_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SequenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sequence_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SequenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sequence_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sequence_proto_goTypes,
		DependencyIndexes: file_sequence_proto_depIdxs,
		EnumInfos:         file_sequence_proto_enumTypes,
		MessageInfos:      file_sequence_proto_msgTypes,
	}.Build()
	File_sequence_proto = out.File
	file_sequence_proto_rawDesc = nil
	file_sequence_proto_goTypes = nil
	file_sequence_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SequenceClient is the client API for Sequence service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SequenceClient interface {
	GetSequence(ctx context.Context, in *SequenceRequest, opts ...grpc.CallOption) (*SequenceResponse, error)
}

type sequenceClient struct {
	cc grpc.ClientConnInterface
}

func NewSequenceClient(cc grpc.ClientConnInterface) SequenceClient {
	return &sequenceClient{cc}
}

func (c *sequenceClient) GetSequence(ctx context.Context, in *SequenceRequest, opts ...grpc.CallOption) (*SequenceResponse, error) {
	out := new(SequenceResponse)
	err := c.cc.Invoke(ctx, "/sequence.Sequence/GetSequence", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SequenceServer is the server API for Sequence service.
type SequenceServer interface {
	GetSequence(context.Context, *SequenceRequest) (*SequenceResponse, error)
}

// UnimplementedSequenceServer can be embedded to have forward compatible implementations.
type UnimplementedSequenceServer struct {
}

func (*UnimplementedSequenceServer) GetSequence(context.Context, *SequenceRequest) (*SequenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSequence not implemented")
}

func RegisterSequenceServer(s *grpc.Server, srv SequenceServer) {
	s.RegisterService(&_Sequence_serviceDesc, srv)
}

func _Sequence_GetSequence_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SequenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SequenceServer).GetSequence(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sequence.Sequence/GetSequence",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SequenceServer).GetSequence(ctx, req.(*SequenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sequence_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sequence.Sequence",
	HandlerType: (*SequenceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSequence",
			Handler:    _Sequence_GetSequence_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sequence.proto",
}
